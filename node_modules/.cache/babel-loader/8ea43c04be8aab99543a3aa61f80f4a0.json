{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport jwt_decode from \"jwt-decode\";\n\nconst Home = () => {\n  class App {\n    constructor() {\n      this.mainContent = document.getElementById('main-content');\n      this.charactersContent = document.getElementById('characters-list');\n      this.homepageLink = document.getElementById('homepage');\n      this.inputSearch = document.getElementById('input-search');\n      this.logout = document.getElementById('logout');\n      this.buttonSearch = document.getElementById('button-search');\n      this.images = document.getElementsByClassName('img-button');\n      this.offset = 0;\n      this.getCharacters();\n      this.addEvents();\n      this.Logout();\n    }\n\n    Logout() {\n      this.logout.onclick = () => {\n        localStorage.clear();\n        window.location.href = '/';\n      };\n    }\n\n    addEvents() {\n      this.buttonSearch.onclick = () => this.searchCharacter(); //localStorage.getItem('app-token');\n\n\n      console.log(localStorage.getItem('app-token')); //parseJwt(localStorage.getItem('app-token'));\n    }\n\n    async getCharacters(name = null) {\n      try {\n        let url = \"http://localhost:3333/characters?offset=\".concat(this.offset);\n\n        if (name !== null) {\n          url += \"&nameStartsWith=\".concat(name);\n        }\n\n        const result = await axios.get(url);\n        this.populate(result.data.characters);\n        this.pagination(result.data.total);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async getCharacterInfo(id) {\n      try {\n        const url = \"http://localhost:3333/characters/\".concat(id);\n        const result = await axios.get(url);\n        this.showCharacterInfo(result.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async getComic(id) {\n      try {\n        const url = \"http://localhost:3333/comics/\".concat(id);\n        const result = await axios.get(url);\n        this.populateComic(result.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    populate(data) {\n      this.charactersContent.innerHTML = '';\n\n      if (data <= 0) {\n        this.charactersContent.innerHTML = \"<p><i class=\\\"fas fa-exclamation-circle\\\"></i> Oops! Character not found.</p>\";\n      }\n\n      data.forEach(item => {\n        if (item.thumbnail.path.includes('image_not_available')) {\n          const character = \"<div class=\\\"card m-2\\\" style=\\\"width: 200px\\\">\\n                                  <img class=\\\"card-img-top img-button\\\" title=\\\"\".concat(item.name, \"\\\" data-id=\\\"\").concat(item.id, \"\\\" src=\\\"./img/marvel_default.png\\\" alt=\\\"\\\">\\n                                  <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title text-center text-muted\\\">\").concat(item.name, \"</h5>\\n                                  </div>\\n                                </div>\");\n          this.charactersContent.innerHTML += character;\n        } else {\n          const character = \"<div class=\\\"card m-2\\\" style=\\\"width: 200px\\\">\\n                                  <img class=\\\"card-img-top img-button\\\" title=\\\"\".concat(item.name, \"\\\" data-id=\\\"\").concat(item.id, \"\\\" src=\\\"\").concat(item.thumbnail.path, \".\").concat(item.thumbnail.extension, \"\\\" alt=\\\"\\\">\\n                                  <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title text-center text-muted\\\">\").concat(item.name, \"</h5>\\n                                  </div>\\n                                </div>\");\n          this.charactersContent.innerHTML += character;\n        }\n      });\n\n      for (let image of this.images) {\n        image.onclick = event => this.getCharacterInfo(event.target.dataset.id);\n      }\n    }\n\n    pagination(total) {\n      document.querySelector('.pagination').innerHTML = '';\n      const pages = Math.ceil(total / 100);\n\n      for (let i = 1; i <= pages; i++) {\n        const li = \" <li class=\\\"page-item\\\">\\n                            <a class=\\\"page-link\\\" data-page=\\\"\".concat(i, \"\\\" href=\\\"#\\\">\").concat(i, \"</a>\\n                        </li>\");\n        document.querySelector('.pagination').innerHTML += li;\n      }\n\n      for (let link of document.querySelectorAll('.page-link')) {\n        link.onclick = event => {\n          const page = event.target.dataset.page;\n          this.offset = (page - 1) * 100;\n          this.getCharacters();\n        };\n      }\n    }\n\n    showCharacterInfo(data) {\n      const img = \"\".concat(data[0].thumbnail.path, \".\").concat(data[0].thumbnail.extension);\n      const name = data[0].name;\n      let description = data[0].description;\n      let comics = data[0].comics.items;\n\n      if (!description) {\n        description = 'Description not informed.';\n      }\n\n      for (const item of comics) {\n        const parts = item.resourceURI.split('comics/');\n        const id = parts[1];\n        this.getComic(id);\n      }\n\n      this.homepageLink.innerHTML = \"<i class=\\\"fas fa-long-arrow-alt-left mr-2\\\"></i> Back to homepage\";\n      this.inputSearch.parentNode.remove();\n      this.mainContent.innerHTML = \"<div class=\\\"row bg-light rounded-top p-3\\\">\\n                                                <div class=\\\"col-12 d-flex\\\">\\n                                                    <div>\\n                                                      <img src=\\\"\".concat(img, \"\\\" height=\\\"300\\\" alt=\\\"\\\">\\n                                                    </div>\\n                                                    <div class=\\\"card-body\\\">\\n                                                      <h2 class=\\\"card-title mb-3\\\" style=\\\"color:black\\\">\").concat(name, \"</h2><hr>\\n                                                      <p class=\\\"card-text\\\" style=\\\"color:black\\\"><span class=\\\"font-weight-bold\\\" style=\\\"color:black\\\">Description: </span>\").concat(description, \"</p>\\n                                                    </div>\\n                                                </div>\\n                                              </div>\\n                                              <div class=\\\"row bg-light rounded-bottom p-3\\\">\\n                                                <p class=\\\"col-12 font-weight-bold\\\">Comics: </p>\\n                                                <ul class=\\\"col-12\\\" id=\\\"hqs\\\"></ul>\\n                                              </div>\");\n    }\n\n    populateComic(comic) {\n      let title = comic[0].title.substr(0, 12);\n\n      if (comic[0].title.length >= 12) {\n        title += \"...\";\n      }\n\n      const li = \"<li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"\".concat(comic[0].urls[0].url, \"\\\" target=\\\"_blank\\\">\\n                          <img width=\\\"100\\\" src=\\\"\").concat(comic[0].images[0].path, \".\").concat(comic[0].images[0].extension, \"\\\">\\n                        </a>\\n                        <p class=\\\"text-center\\\">\").concat(title, \"<p>\\n                      </li>\");\n      document.querySelector('#hqs').innerHTML += li;\n    }\n\n    searchCharacter() {\n      const name = this.inputSearch.value.toUpperCase();\n      console.log(name);\n      name.length >= 3 ? this.getCharacters(name) : swal('Please, type at least 03 letters to do a search.');\n    }\n\n    searchComics() {\n      const name = this.inputSearch.value.toUpperCase();\n      console.log(name);\n      name.length >= 3 ? this.getComic(name) : swal('Please, type at least 03 letters to do a search.');\n    }\n\n    decodejwt() {\n      var token = \"eyJ0eXAiO.../// jwt token\";\n      var decoded = jwt_decode(token);\n      console.log(decoded);\n    }\n\n  }\n\n  new App();\n  document.getElementById('header').style.display = 'block';\n  return React.createElement(React.Fragment, null);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/adinealves/Documents/DesafioStone1/src/pages/home/Home.js"],"names":["React","axios","swal","jwt_decode","Home","App","constructor","mainContent","document","getElementById","charactersContent","homepageLink","inputSearch","logout","buttonSearch","images","getElementsByClassName","offset","getCharacters","addEvents","Logout","onclick","localStorage","clear","window","location","href","searchCharacter","console","log","getItem","name","url","result","get","populate","data","characters","pagination","total","error","getCharacterInfo","id","showCharacterInfo","getComic","populateComic","innerHTML","forEach","item","thumbnail","path","includes","character","extension","image","event","target","dataset","querySelector","pages","Math","ceil","i","li","link","querySelectorAll","page","img","description","comics","items","parts","resourceURI","split","parentNode","remove","comic","title","substr","length","urls","value","toUpperCase","searchComics","decodejwt","token","decoded","style","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport jwt_decode from \"jwt-decode\";\n\n\nconst Home = () => {\n    class App {\n        \n        constructor() {\n          this.mainContent = document.getElementById('main-content');\n          this.charactersContent = document.getElementById('characters-list');\n          this.homepageLink = document.getElementById('homepage');\n          this.inputSearch = document.getElementById('input-search');\n          this.logout = document.getElementById('logout');\n          this.buttonSearch = document.getElementById('button-search');\n          \n          this.images = document.getElementsByClassName('img-button');\n      \n          this.offset = 0;\n      \n          this.getCharacters();\n          this.addEvents();\n          this.Logout();\n          \n        }\n        \n        \n        Logout(){\n            this.logout.onclick = () => {\n                \n                    localStorage.clear();\n                    window.location.href = '/';\n                    \n            }\n         \n        }\n\n        addEvents() {\n          this.buttonSearch.onclick = () => this.searchCharacter();\n          //localStorage.getItem('app-token');\n          console.log(localStorage.getItem('app-token'));\n            //parseJwt(localStorage.getItem('app-token'));\n           \n\n          \n        }\n\n       \n\n      \n        async getCharacters(name = null) {\n          try {\n            let url = `http://localhost:3333/characters?offset=${this.offset}`;\n            \n            if (name !== null) {\n              url += `&nameStartsWith=${name}`;\n            }\n      \n            const result = await axios.get(url);\n      \n            this.populate(result.data.characters);\n            this.pagination(result.data.total);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n\n        \n      \n        async getCharacterInfo(id) {\n          try {\n            const url = `http://localhost:3333/characters/${id}`;\n      \n            const result = await axios.get(url);\n      \n            this.showCharacterInfo(result.data);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      \n        async getComic(id) {\n          try {\n            const url = `http://localhost:3333/comics/${id}`;\n      \n            const result = await axios.get(url);\n      \n            this.populateComic(result.data);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      \n        populate(data) {\n          this.charactersContent.innerHTML = '';\n      \n          if (data <= 0) {\n            this.charactersContent.innerHTML = `<p><i class=\"fas fa-exclamation-circle\"></i> Oops! Character not found.</p>`;\n          }\n      \n          data.forEach(item => {\n            if (item.thumbnail.path.includes('image_not_available')) {\n              const character = `<div class=\"card m-2\" style=\"width: 200px\">\n                                  <img class=\"card-img-top img-button\" title=\"${item.name}\" data-id=\"${item.id}\" src=\"./img/marvel_default.png\" alt=\"\">\n                                  <div class=\"card-body\">\n                                    <h5 class=\"card-title text-center text-muted\">${item.name}</h5>\n                                  </div>\n                                </div>`;\n      \n              this.charactersContent.innerHTML += character;\n            } else {\n              const character = `<div class=\"card m-2\" style=\"width: 200px\">\n                                  <img class=\"card-img-top img-button\" title=\"${item.name}\" data-id=\"${item.id}\" src=\"${item.thumbnail.path}.${item.thumbnail.extension}\" alt=\"\">\n                                  <div class=\"card-body\">\n                                    <h5 class=\"card-title text-center text-muted\">${item.name}</h5>\n                                  </div>\n                                </div>`;\n      \n              this.charactersContent.innerHTML += character;\n            }\n          });\n      \n          for (let image of this.images) {\n            image.onclick = (event) => this.getCharacterInfo(event.target.dataset.id);\n          }\n        }\n      \n        pagination(total) {\n          document.querySelector('.pagination').innerHTML = '';\n      \n          const pages = Math.ceil(total / 100);\n      \n          for (let i = 1; i <= pages; i++) {\n            const li = ` <li class=\"page-item\">\n                            <a class=\"page-link\" data-page=\"${i}\" href=\"#\">${i}</a>\n                        </li>`;\n            document.querySelector('.pagination').innerHTML += li;\n          }\n      \n          for (let link of document.querySelectorAll('.page-link')) {\n            link.onclick = (event) => {\n              const page = event.target.dataset.page;\n              this.offset = (page - 1) * 100;\n      \n              this.getCharacters();\n            };\n          }\n        }\n      \n        showCharacterInfo(data) {\n          const img = `${data[0].thumbnail.path}.${data[0].thumbnail.extension}`;\n          const name = data[0].name;\n          let description = data[0].description;\n          let comics = data[0].comics.items;\n      \n          if (!description) {\n            description = 'Description not informed.';\n          }\n      \n          for (const item of comics) {\n            const parts = item.resourceURI.split('comics/');\n            const id = parts[1];\n      \n            this.getComic(id);\n          }\n      \n          this.homepageLink.innerHTML = `<i class=\"fas fa-long-arrow-alt-left mr-2\"></i> Back to homepage`;\n          this.inputSearch.parentNode.remove();\n          this.mainContent.innerHTML = `<div class=\"row bg-light rounded-top p-3\">\n                                                <div class=\"col-12 d-flex\">\n                                                    <div>\n                                                      <img src=\"${img}\" height=\"300\" alt=\"\">\n                                                    </div>\n                                                    <div class=\"card-body\">\n                                                      <h2 class=\"card-title mb-3\" style=\"color:black\">${name}</h2><hr>\n                                                      <p class=\"card-text\" style=\"color:black\"><span class=\"font-weight-bold\" style=\"color:black\">Description: </span>${description}</p>\n                                                    </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row bg-light rounded-bottom p-3\">\n                                                <p class=\"col-12 font-weight-bold\">Comics: </p>\n                                                <ul class=\"col-12\" id=\"hqs\"></ul>\n                                              </div>`;\n        }\n      \n        populateComic(comic) {\n          let title = comic[0].title.substr(0, 12);\n      \n          if (comic[0].title.length >= 12) {\n            title += \"...\";\n          }\n      \n          const li = `<li class=\"list-inline-item\">\n                        <a href=\"${comic[0].urls[0].url}\" target=\"_blank\">\n                          <img width=\"100\" src=\"${comic[0].images[0].path}.${comic[0].images[0].extension}\">\n                        </a>\n                        <p class=\"text-center\">${title}<p>\n                      </li>`;\n\n                      \n      \n          document.querySelector('#hqs').innerHTML += li;\n        }\n      \n        searchCharacter() {\n          const name = this.inputSearch.value.toUpperCase();\n          console.log(name);\n      \n          (name.length >= 3) ? this.getCharacters(name) : swal('Please, type at least 03 letters to do a search.');\n        }\n        \n        searchComics() {\n            const name = this.inputSearch.value.toUpperCase();\n            console.log(name);\n        \n            (name.length >= 3) ? this.getComic(name) : swal('Please, type at least 03 letters to do a search.');\n          }\n\n          decodejwt(){\n            var token = \"eyJ0eXAiO.../// jwt token\";\n            var decoded = jwt_decode(token);\n            \n            console.log(decoded);\n          }\n\n      }\n      \n      new App();\n     \n      \n\n      document.getElementById('header').style.display = 'block';\n\nreturn (\n    <>\n       \n        \n    </>\n)\n\n}\n\n\n\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}