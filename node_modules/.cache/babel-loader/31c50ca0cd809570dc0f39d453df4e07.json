{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst Home = () => {\n  class App {\n    constructor() {\n      this.mainContent = document.getElementById('main-content');\n      this.charactersContent = document.getElementById('characters-list');\n      this.homepageLink = document.getElementById('homepage');\n      this.inputSearch = document.getElementById('input-search');\n      this.inputSearchComics = document.getElementById('input-searchComics');\n      this.buttonSearch = document.getElementById('button-search');\n      this.buttonSearchComics = document.getElementById('button-searchComics');\n      this.images = document.getElementsByClassName('img-button');\n      this.offset = 0;\n      this.getCharacters();\n      this.addEvents();\n    }\n\n    addEvents() {\n      this.buttonSearch.onclick = () => this.searchCharacter();\n\n      this.buttonSearchComics.onclick = () => this.searchComics();\n    }\n\n    async getCharacters(name = null) {\n      try {\n        let url = \"http://localhost:3333/characters?offset=\".concat(this.offset);\n\n        if (name !== null) {\n          url += \"&nameStartsWith=\".concat(name);\n        }\n\n        const result = await axios.get(url);\n        this.populate(result.data.characters);\n        this.pagination(result.data.total);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async getComics(name = null) {\n      try {\n        let url = \"http://localhost:3333/characters?offset=\".concat(this.offset);\n\n        if (name !== null) {\n          url += \"&nameStartsWith=\".concat(name);\n        }\n\n        const result = await axios.get(url);\n        this.populate(result.data.characters);\n        this.pagination(result.data.total);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async getCharacterInfo(id) {\n      try {\n        const url = \"http://localhost:3333/characters/\".concat(id);\n        const result = await axios.get(url);\n        this.showCharacterInfo(result.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    async getComic(id) {\n      try {\n        const url = \"http://localhost:3333/comics/\".concat(id);\n        const result = await axios.get(url);\n        this.populateComic(result.data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    populate(data) {\n      this.charactersContent.innerHTML = '';\n\n      if (data <= 0) {\n        this.charactersContent.innerHTML = \"<p><i class=\\\"fas fa-exclamation-circle\\\"></i> Oops! Character not found.</p>\";\n      }\n\n      data.forEach(item => {\n        if (item.thumbnail.path.includes('image_not_available')) {\n          const character = \"<div class=\\\"card m-2\\\" style=\\\"width: 200px\\\">\\n                                  <img class=\\\"card-img-top img-button\\\" title=\\\"\".concat(item.name, \"\\\" data-id=\\\"\").concat(item.id, \"\\\" src=\\\"./img/marvel_default.png\\\" alt=\\\"\\\">\\n                                  <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title text-center text-muted\\\">\").concat(item.name, \"</h5>\\n                                  </div>\\n                                </div>\");\n          this.charactersContent.innerHTML += character;\n        } else {\n          const character = \"<div class=\\\"card m-2\\\" style=\\\"width: 200px\\\">\\n                                  <img class=\\\"card-img-top img-button\\\" title=\\\"\".concat(item.name, \"\\\" data-id=\\\"\").concat(item.id, \"\\\" src=\\\"\").concat(item.thumbnail.path, \".\").concat(item.thumbnail.extension, \"\\\" alt=\\\"\\\">\\n                                  <div class=\\\"card-body\\\">\\n                                    <h5 class=\\\"card-title text-center text-muted\\\">\").concat(item.name, \"</h5>\\n                                  </div>\\n                                </div>\");\n          this.charactersContent.innerHTML += character;\n        }\n      });\n\n      for (let image of this.images) {\n        image.onclick = event => this.getCharacterInfo(event.target.dataset.id);\n      }\n    }\n\n    pagination(total) {\n      document.querySelector('.pagination').innerHTML = '';\n      const pages = Math.ceil(total / 100);\n\n      for (let i = 1; i <= pages; i++) {\n        const li = \" <li class=\\\"page-item\\\">\\n                            <a class=\\\"page-link\\\" data-page=\\\"\".concat(i, \"\\\" href=\\\"#\\\">\").concat(i, \"</a>\\n                        </li>\");\n        document.querySelector('.pagination').innerHTML += li;\n      }\n\n      for (let link of document.querySelectorAll('.page-link')) {\n        link.onclick = event => {\n          const page = event.target.dataset.page;\n          this.offset = (page - 1) * 100;\n          this.getCharacters();\n        };\n      }\n    }\n\n    showCharacterInfo(data) {\n      const img = \"\".concat(data[0].thumbnail.path, \".\").concat(data[0].thumbnail.extension);\n      const name = data[0].name;\n      let description = data[0].description;\n      let comics = data[0].comics.items;\n\n      if (!description) {\n        description = 'Description not informed.';\n      }\n\n      for (const item of comics) {\n        const parts = item.resourceURI.split('comics/');\n        const id = parts[1];\n        this.getComic(id);\n      }\n\n      this.homepageLink.innerHTML = \"<i class=\\\"fas fa-long-arrow-alt-left mr-2\\\"></i> Back to homepage\";\n      this.inputSearch.parentNode.remove();\n      this.mainContent.innerHTML = \"<div class=\\\"row bg-light rounded-top p-3\\\">\\n                                                <div class=\\\"col-12 d-flex\\\">\\n                                                    <div>\\n                                                      <img src=\\\"\".concat(img, \"\\\" height=\\\"300\\\" alt=\\\"\\\">\\n                                                    </div>\\n                                                    <div class=\\\"card-body\\\">\\n                                                      <h2 class=\\\"card-title mb-3\\\" style=\\\"color:black\\\">\").concat(name, \"</h2><hr>\\n                                                      <p class=\\\"card-text\\\" style=\\\"color:black\\\"><span class=\\\"font-weight-bold\\\" style=\\\"color:black\\\">Description: </span>\").concat(description, \"</p>\\n                                                    </div>\\n                                                </div>\\n                                              </div>\\n                                              <div class=\\\"row bg-light rounded-bottom p-3\\\">\\n                                                <p class=\\\"col-12 font-weight-bold\\\">Comics: </p>\\n                                                <ul class=\\\"col-12\\\" id=\\\"hqs\\\"></ul>\\n                                              </div>\");\n    }\n\n    populateComic(comic) {\n      let title = comic[0].title.substr(0, 12);\n\n      if (comic[0].title.length >= 12) {\n        title += \"...\";\n      }\n\n      const li = \"<li class=\\\"list-inline-item\\\">\\n                        <a href=\\\"\".concat(comic[0].urls[0].url, \"\\\" target=\\\"_blank\\\">\\n                          <img width=\\\"100\\\" src=\\\"\").concat(comic[0].images[0].path, \".\").concat(comic[0].images[0].extension, \"\\\">\\n                        </a>\\n                        <p class=\\\"text-center\\\">\").concat(title, \"<p>\\n                      </li>\");\n      document.querySelector('#hqs').innerHTML += li;\n    }\n\n    searchCharacter() {\n      const name = this.inputSearch.value.toUpperCase();\n      console.log(name);\n      name.length >= 3 ? this.getCharacters(name) : swal('Please, type at least 03 letters to do a search.');\n    }\n\n    searchComics() {\n      const name = this.inputSearch.value.toUpperCase();\n      console.log(name);\n      name.length >= 3 ? this.getComic(name) : swal('Please, type at least 03 letters to do a search.');\n    }\n\n  }\n\n  new App();\n  document.getElementById('header').style.display = 'block';\n  return React.createElement(React.Fragment, null);\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/adinealves/Documents/DesafioStone1/src/pages/home/Home.js"],"names":["React","axios","swal","Home","App","constructor","mainContent","document","getElementById","charactersContent","homepageLink","inputSearch","inputSearchComics","buttonSearch","buttonSearchComics","images","getElementsByClassName","offset","getCharacters","addEvents","onclick","searchCharacter","searchComics","name","url","result","get","populate","data","characters","pagination","total","error","console","log","getComics","getCharacterInfo","id","showCharacterInfo","getComic","populateComic","innerHTML","forEach","item","thumbnail","path","includes","character","extension","image","event","target","dataset","querySelector","pages","Math","ceil","i","li","link","querySelectorAll","page","img","description","comics","items","parts","resourceURI","split","parentNode","remove","comic","title","substr","length","urls","value","toUpperCase","style","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nconst Home = () => {\n    class App {\n        constructor() {\n          this.mainContent = document.getElementById('main-content');\n          this.charactersContent = document.getElementById('characters-list');\n          this.homepageLink = document.getElementById('homepage');\n          this.inputSearch = document.getElementById('input-search');\n          this.inputSearchComics = document.getElementById('input-searchComics');\n          this.buttonSearch = document.getElementById('button-search');\n          this.buttonSearchComics = document.getElementById('button-searchComics');\n          this.images = document.getElementsByClassName('img-button');\n      \n          this.offset = 0;\n      \n          this.getCharacters();\n          this.addEvents();\n        }\n      \n        addEvents() {\n          this.buttonSearch.onclick = () => this.searchCharacter();\n          this.buttonSearchComics.onclick = () => this.searchComics();\n        }\n      \n        async getCharacters(name = null) {\n          try {\n            let url = `http://localhost:3333/characters?offset=${this.offset}`;\n      \n            if (name !== null) {\n              url += `&nameStartsWith=${name}`;\n            }\n      \n            const result = await axios.get(url);\n      \n            this.populate(result.data.characters);\n            this.pagination(result.data.total);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n\n        async getComics(name = null) {\n            try {\n              let url = `http://localhost:3333/characters?offset=${this.offset}`;\n        \n              if (name !== null) {\n                url += `&nameStartsWith=${name}`;\n              }\n        \n              const result = await axios.get(url);\n        \n              this.populate(result.data.characters);\n              this.pagination(result.data.total);\n            } catch (error) {\n              console.log(error);\n            }\n          }\n      \n        async getCharacterInfo(id) {\n          try {\n            const url = `http://localhost:3333/characters/${id}`;\n      \n            const result = await axios.get(url);\n      \n            this.showCharacterInfo(result.data);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      \n        async getComic(id) {\n          try {\n            const url = `http://localhost:3333/comics/${id}`;\n      \n            const result = await axios.get(url);\n      \n            this.populateComic(result.data);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      \n        populate(data) {\n          this.charactersContent.innerHTML = '';\n      \n          if (data <= 0) {\n            this.charactersContent.innerHTML = `<p><i class=\"fas fa-exclamation-circle\"></i> Oops! Character not found.</p>`;\n          }\n      \n          data.forEach(item => {\n            if (item.thumbnail.path.includes('image_not_available')) {\n              const character = `<div class=\"card m-2\" style=\"width: 200px\">\n                                  <img class=\"card-img-top img-button\" title=\"${item.name}\" data-id=\"${item.id}\" src=\"./img/marvel_default.png\" alt=\"\">\n                                  <div class=\"card-body\">\n                                    <h5 class=\"card-title text-center text-muted\">${item.name}</h5>\n                                  </div>\n                                </div>`;\n      \n              this.charactersContent.innerHTML += character;\n            } else {\n              const character = `<div class=\"card m-2\" style=\"width: 200px\">\n                                  <img class=\"card-img-top img-button\" title=\"${item.name}\" data-id=\"${item.id}\" src=\"${item.thumbnail.path}.${item.thumbnail.extension}\" alt=\"\">\n                                  <div class=\"card-body\">\n                                    <h5 class=\"card-title text-center text-muted\">${item.name}</h5>\n                                  </div>\n                                </div>`;\n      \n              this.charactersContent.innerHTML += character;\n            }\n          });\n      \n          for (let image of this.images) {\n            image.onclick = (event) => this.getCharacterInfo(event.target.dataset.id);\n          }\n        }\n      \n        pagination(total) {\n          document.querySelector('.pagination').innerHTML = '';\n      \n          const pages = Math.ceil(total / 100);\n      \n          for (let i = 1; i <= pages; i++) {\n            const li = ` <li class=\"page-item\">\n                            <a class=\"page-link\" data-page=\"${i}\" href=\"#\">${i}</a>\n                        </li>`;\n            document.querySelector('.pagination').innerHTML += li;\n          }\n      \n          for (let link of document.querySelectorAll('.page-link')) {\n            link.onclick = (event) => {\n              const page = event.target.dataset.page;\n              this.offset = (page - 1) * 100;\n      \n              this.getCharacters();\n            };\n          }\n        }\n      \n        showCharacterInfo(data) {\n          const img = `${data[0].thumbnail.path}.${data[0].thumbnail.extension}`;\n          const name = data[0].name;\n          let description = data[0].description;\n          let comics = data[0].comics.items;\n      \n          if (!description) {\n            description = 'Description not informed.';\n          }\n      \n          for (const item of comics) {\n            const parts = item.resourceURI.split('comics/');\n            const id = parts[1];\n      \n            this.getComic(id);\n          }\n      \n          this.homepageLink.innerHTML = `<i class=\"fas fa-long-arrow-alt-left mr-2\"></i> Back to homepage`;\n          this.inputSearch.parentNode.remove();\n          this.mainContent.innerHTML = `<div class=\"row bg-light rounded-top p-3\">\n                                                <div class=\"col-12 d-flex\">\n                                                    <div>\n                                                      <img src=\"${img}\" height=\"300\" alt=\"\">\n                                                    </div>\n                                                    <div class=\"card-body\">\n                                                      <h2 class=\"card-title mb-3\" style=\"color:black\">${name}</h2><hr>\n                                                      <p class=\"card-text\" style=\"color:black\"><span class=\"font-weight-bold\" style=\"color:black\">Description: </span>${description}</p>\n                                                    </div>\n                                                </div>\n                                              </div>\n                                              <div class=\"row bg-light rounded-bottom p-3\">\n                                                <p class=\"col-12 font-weight-bold\">Comics: </p>\n                                                <ul class=\"col-12\" id=\"hqs\"></ul>\n                                              </div>`;\n        }\n      \n        populateComic(comic) {\n          let title = comic[0].title.substr(0, 12);\n      \n          if (comic[0].title.length >= 12) {\n            title += \"...\";\n          }\n      \n          const li = `<li class=\"list-inline-item\">\n                        <a href=\"${comic[0].urls[0].url}\" target=\"_blank\">\n                          <img width=\"100\" src=\"${comic[0].images[0].path}.${comic[0].images[0].extension}\">\n                        </a>\n                        <p class=\"text-center\">${title}<p>\n                      </li>`;\n      \n          document.querySelector('#hqs').innerHTML += li;\n        }\n      \n        searchCharacter() {\n          const name = this.inputSearch.value.toUpperCase();\n          console.log(name);\n      \n          (name.length >= 3) ? this.getCharacters(name) : swal('Please, type at least 03 letters to do a search.');\n        }\n        \n        searchComics() {\n            const name = this.inputSearch.value.toUpperCase();\n            console.log(name);\n        \n            (name.length >= 3) ? this.getComic(name) : swal('Please, type at least 03 letters to do a search.');\n          }\n\n      }\n      \n      new App();\n\n      document.getElementById('header').style.display = 'block';\n\nreturn (\n    <>\n       \n        \n    </>\n)\n\n}\n\n\n\n\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}