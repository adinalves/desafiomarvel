{"ast":null,"code":"var _jsxFileName = \"/Users/adinealves/Documents/DesafioStone1/src/pages/login/Login.js\";\nimport React from 'react';\nimport { ErrorMessage, Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { history } from '../../history';\nimport './Login.css';\n\nconst Login = () => {\n  const handleSubmit = values => {\n    axios.post('http://localhost:8080/v1/api/auth', values).then(resp => {\n      const data = resp.data;\n\n      if (data) {\n        localStorage.setItem('app-token', JSON.stringify(data));\n        history.push('/');\n      }\n    });\n  };\n\n  const validations = yup.object().shape({\n    username: yup.string().required(),\n    password: yup.string().min(8).required()\n  });\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"DESAFIO STONE\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"API Marvel\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Preencha os campos para continuar ou cadastre-se \", React.createElement(\"a\", {\n    href: \"http://localhost:3000/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"AQUI\")), React.createElement(Formik, {\n    initialValues: {},\n    onSubmit: handleSubmit,\n    validationSchema: validations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Login-Group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"username\",\n    className: \"Login-Field\",\n    placeholder: \"Digite o username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    component: \"span\",\n    name: \"username\",\n    className: \"Login-Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Login-Group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    className: \"Login-Field\",\n    placeholder: \"Digite o password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    component: \"span\",\n    name: \"password\",\n    className: \"Login-Error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"Login-Btn\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Login\"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/adinealves/Documents/DesafioStone1/src/pages/login/Login.js"],"names":["React","ErrorMessage","Formik","Form","Field","yup","axios","history","Login","handleSubmit","values","post","then","resp","data","localStorage","setItem","JSON","stringify","push","validations","object","shape","username","string","required","password","min"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,aAAP;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC3BJ,IAAAA,KAAK,CAACK,IAAN,CAAW,mCAAX,EAAgDD,MAAhD,EACKE,IADL,CACUC,IAAI,IAAI;AAAA,YACFC,IADE,GACOD,IADP,CACFC,IADE;;AAEV,UAAIA,IAAJ,EAAU;AACNC,QAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAlC;AAEAP,QAAAA,OAAO,CAACY,IAAR,CAAa,GAAb;AACH;AACJ,KARL;AASH,GAVD;;AAYA,QAAMC,WAAW,GAAGf,GAAG,CAACgB,MAAJ,GAAaC,KAAb,CAAmB;AACnCC,IAAAA,QAAQ,EAAElB,GAAG,CAACmB,MAAJ,GAAaC,QAAb,EADyB;AAEnCC,IAAAA,QAAQ,EAAErB,GAAG,CAACmB,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBF,QAApB;AAFyB,GAAnB,CAApB;AAIA,SACI,0CAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DAAoD;AAAG,IAAA,IAAI,EAAC,gCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAApD,CAJJ,EAKI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE,EADnB;AAEI,IAAA,QAAQ,EAAEhB,YAFd;AAGI,IAAA,gBAAgB,EAAEW,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,aAFd;AAE4B,IAAA,WAAW,EAAC,mBAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,SAAS,EAAC,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAYI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,UADT;AACoB,IAAA,IAAI,EAAC,UADzB;AAEI,IAAA,SAAS,EAAC,aAFd;AAE4B,IAAA,WAAW,EAAC,mBAFxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,YAAD;AACI,IAAA,SAAS,EAAC,MADd;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,SAAS,EAAC,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAZJ,EAuBI;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBJ,CALJ,CALJ,CADJ;AAuCH,CAxDD;;AA0DA,eAAeZ,KAAf","sourcesContent":["import React from 'react'\n\nimport { ErrorMessage, Formik, Form, Field } from 'formik'\nimport * as yup from 'yup'\nimport axios from 'axios'\nimport { history } from '../../history'\n\nimport './Login.css'\n\nconst Login = () => {\n    const handleSubmit = values => {\n        axios.post('http://localhost:8080/v1/api/auth', values)\n            .then(resp => {\n                const { data } = resp\n                if (data) {\n                    localStorage.setItem('app-token', JSON.stringify(data))\n                    \n                    history.push('/')\n                }\n            })\n    }\n\n    const validations = yup.object().shape({\n        username: yup.string().required(),\n        password: yup.string().min(8).required()\n    })\n    return (\n        <>\n            \n            <h1>DESAFIO STONE</h1>\n            <h2>API Marvel</h2>\n            <p>Preencha os campos para continuar ou cadastre-se <a href=\"http://localhost:3000/register\">AQUI</a></p>\n            <Formik\n                initialValues={{}}\n                onSubmit={handleSubmit}\n                validationSchema={validations}\n            >\n                <Form className=\"Login\">\n                    <div className=\"Login-Group\">\n                        <Field\n                            name=\"username\"\n                            className=\"Login-Field\" placeholder=\"Digite o username\"\n                        />\n                        <ErrorMessage\n                            component=\"span\"\n                            name=\"username\"\n                            className=\"Login-Error\"\n                        />\n                    </div>\n                    <div className=\"Login-Group\">\n                        <Field\n                            name=\"password\" type=\"password\"\n                            className=\"Login-Field\" placeholder=\"Digite o password\"\n                        />\n                        <ErrorMessage\n                            component=\"span\"\n                            name=\"password\"\n                            className=\"Login-Error\"\n                        />\n                    </div>\n                    <button className=\"Login-Btn\" type=\"submit\">Login</button>\n                </Form>\n            </Formik>\n        </>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}